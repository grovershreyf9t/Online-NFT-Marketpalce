#
# SFU CMPT 756
#
# k8s yaml to deploy:
#   1 Deployment - this governs the logic (container)
#   1 Service - this opens up the logic
#   1 Service Account - this enable access control
#
# Notable observations:
#
# 1. the Service's .spec.ports[0] need to matches the Deployment's
#    .spec.template.spec.containers[0].ports
# 2. Deployment's .spec.template.spec.containers.livenessProbe & readinessProbe
#    can be removed to clean up the logs
#
apiVersion: v1
kind: Service
metadata:
  name: logger
  labels:
    app: logger
spec:
  ports:
    - port: 30003
      name: http
  selector:
    app: logger
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: svc-logger
  labels:
    account: SVC_LOGGER
---
# Define the loader ServiceAccount here
# so that its token is ready by the time the
# DB service starts.
apiVersion: v1
kind: ServiceAccount
metadata:
  name: svc-logger
  labels:
    account: SVC_LOGGER
---
# Define a Secret with a known name `svc-loader-token`, so that
# we can refer to that name when specifying the DB container
apiVersion: v1
kind: Secret
metadata:
  name: svc-logger-token
  annotations:
    kubernetes.io/service-account.name: svc-logger
type: kubernetes.io/service-account-token
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logger
  labels:
    app: logger
    version: v1
spec:
  replicas: 5
  selector:
    matchLabels:
      app: logger
      version: v1
  template:
    metadata:
      name: database-pod
      labels:
        app: logger
        version: v1
    spec:
      serviceAccountName: svc-logger
      containers:
        - name: logger
          image: ZZ-CR-ID/ZZ-REG-ID/logger:v1
          imagePullPolicy: Always
          env:
            - name: SVC_LOGGER_TOKEN
              valueFrom:
                secretKeyRef:
                  # The known name of secret/svc-loader-token
                  name: svc-logger-token
                  key: token
          envFrom:
            - secretRef:
                name: awscred
          ports:
            - containerPort: 30003
          livenessProbe:
            httpGet:
              path: /api/v1/logger/health
              port: 30003
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /api/v1/logger/readiness
              port: 30003
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 5
